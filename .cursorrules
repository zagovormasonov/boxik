# .cursorrules
# Правила организации кода для React + TypeScript + Vite

# === Общие принципы ===
- Никогда не пиши всё в один файл.
- Если файл превышает ~200 строк — раздели код на несколько модулей.
- Соблюдай принцип единственной ответственности (SRP).
- Не смешивай стили, бизнес-логику и API-запросы в одном файле.

# === Точка входа ===
- main.tsx используется только для инициализации ReactDOM и провайдеров (Router, QueryClient, Zustand/Redux).
- App.tsx используется только для маршрутов, Layout'ов и глобальных обёрток.  
  Никакой бизнес-логики и API-запросов.

# === Структура проекта ===
- src/app/ — точка входа приложения (App.tsx, main.tsx, роутинг).
- src/components/ — переиспользуемые UI-компоненты.
  - src/components/ui/ — атомарные компоненты (Button, Input, Modal и т.д.).
- src/features/ — функциональные блоки (auth, chat, profile и т.д.).
  - Внутри каждой feature:
    - components/ — UI-часть (компоненты только этой фичи).
    - hooks/ — бизнес-логика (React hooks).
    - api/ — запросы к серверу.
- src/services/ — глобальные сервисы (apiClient.ts, конфиги axios, Zustand store).
- src/shared/ — общие утилиты, хелперы, константы, типы.
  - lib/ — вспомогательные функции.
  - hooks/ — кастомные хуки общего назначения.
  - types/ — глобальные типы/интерфейсы.
- src/styles/ — глобальные стили, tailwind config, variables.

# === Компоненты ===
- Каждый компонент в отдельном файле: `ComponentName.tsx`.
- Если компонент крупный, разбивай его на подкомпоненты (atoms, molecules, organisms).
- Не пиши бизнес-логику или API внутри UI-компонентов.

# === Хуки ===
- Все кастомные хуки начинаются с `use`.
- Хуки одной фичи хранятся в `features/featureName/hooks/`.
- Общие хуки — в `src/shared/hooks/`.

# === API и данные ===
- Все запросы к серверу — только в api/ или services/.
- Не вызывать fetch/axios напрямую внутри компонентов.
- Для каждой feature делай отдельный `api.ts`.

# === Стили ===
- Использовать Tailwind или CSS Modules.
- Не смешивать CSS и бизнес-логику в одном файле.

# === Тесты ===
- Тесты хранить рядом с кодом (`ComponentName.test.tsx`).
