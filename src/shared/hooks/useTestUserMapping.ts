import { useState } from 'react'
import { supabase } from '../../lib/supabase'

export interface TestUserMapping {
  id: string
  session_id: string
  user_id: string
  test_result_id: string
  created_at: string
  updated_at: string
}

export interface CreateTestUserMappingData {
  session_id: string
  user_id: string
  test_result_id: string
}

export function useTestUserMapping() {
  const [isLoading, setIsLoading] = useState(false)
  const [error, setError] = useState<string | null>(null)

  // –°–æ–∑–¥–∞–Ω–∏–µ —Å–≤—è–∑–∏ –º–µ–∂–¥—É —Å–µ—Å—Å–∏–µ–π –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
  const createMapping = async (data: CreateTestUserMappingData): Promise<TestUserMapping | null> => {
    setIsLoading(true)
    setError(null)

    try {
      console.log('üîó useTestUserMapping: –°–æ–∑–¥–∞–µ–º —Å–≤—è–∑—å –º–µ–∂–¥—É —Å–µ—Å—Å–∏–µ–π –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º:', data)

      const { data: mapping, error } = await supabase
        .from('test_user_mapping')
        .insert([{
          session_id: data.session_id,
          user_id: data.user_id,
          test_result_id: data.test_result_id
        }])
        .select()
        .single()

      if (error) {
        console.error('‚ùå useTestUserMapping: –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–≤—è–∑–∏:', error)
        throw error
      }

      console.log('‚úÖ useTestUserMapping: –°–≤—è–∑—å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞:', mapping)
      return mapping
    } catch (err) {
      console.error('‚ùå useTestUserMapping: –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–≤—è–∑–∏:', err)
      setError(err instanceof Error ? err.message : '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Å–≤—è–∑—å')
      return null
    } finally {
      setIsLoading(false)
    }
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ç–µ—Å—Ç–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const getTestResultsForUser = async (userId: string): Promise<string[]> => {
    setIsLoading(true)
    setError(null)

    try {
      console.log('üîç useTestUserMapping: –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userId)

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ userId –≤–∞–ª–∏–¥–Ω—ã–º UUID
      const isUUID = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i.test(userId)
      console.log('üîç useTestUserMapping: userId —è–≤–ª—è–µ—Ç—Å—è –≤–∞–ª–∏–¥–Ω—ã–º UUID:', isUUID, 'userId:', userId)

      if (!isUUID) {
        console.log('‚ö†Ô∏è useTestUserMapping: userId –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –≤–∞–ª–∏–¥–Ω—ã–º UUID, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤')
        return []
      }

      const { data: mappings, error } = await supabase
        .from('test_user_mapping')
        .select('test_result_id')
        .eq('user_id', userId)

      console.log('üîç useTestUserMapping: –†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø—Ä–æ—Å–∞:', { mappings, error })

      if (error) {
        console.error('‚ùå useTestUserMapping: –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–≤—è–∑–µ–π:', error)
        console.error('‚ùå useTestUserMapping: –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', {
          code: error.code,
          message: error.message,
          details: error.details,
          hint: error.hint
        })
        throw error
      }

      const testResultIds = mappings?.map(m => m.test_result_id) || []
      console.log('‚úÖ useTestUserMapping: –ù–∞–π–¥–µ–Ω—ã —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∞:', testResultIds)
      return testResultIds
    } catch (err) {
      console.error('‚ùå useTestUserMapping: –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–≤—è–∑–µ–π:', err)
      setError(err instanceof Error ? err.message : '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–≤—è–∑–∏')
      return []
    } finally {
      setIsLoading(false)
    }
  }

  // –°–≤—è–∑—ã–≤–∞–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ç–µ—Å—Ç–∞ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
  const linkExistingTestResults = async (userId: string, sessionId: string): Promise<boolean> => {
    setIsLoading(true)
    setError(null)

    try {
      console.log('üîó useTestUserMapping: –°–≤—è–∑—ã–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º:', { userId, sessionId })
      console.log('üîç useTestUserMapping: –í–µ—Å—å localStorage:', {
        anonymous_user_id: localStorage.getItem('anonymous_user_id'),
        session_id: localStorage.getItem('session_id')
      })
      console.log('üîç useTestUserMapping: –í–µ—Å—å sessionStorage:', {
        anonymous_user_id: sessionStorage.getItem('anonymous_user_id'),
        session_id: sessionStorage.getItem('session_id')
      })

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º localStorage –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –æ–∂–∏–¥–∞—é—â–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
      const pendingTestResult = localStorage.getItem('pending_test_result')
      if (pendingTestResult) {
        console.log('üîç useTestUserMapping: –ù–∞–π–¥–µ–Ω –æ–∂–∏–¥–∞—é—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ localStorage')
        try {
          const testResult = JSON.parse(pendingTestResult)
          console.log('üîç useTestUserMapping: –î–∞–Ω–Ω—ã–µ –æ–∂–∏–¥–∞—é—â–µ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞:', testResult)
          
          // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –ë–î —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º user_id
          const { data, error: insertError } = await supabase
            .from('test_results')
            .insert([{
              user_id: userId, // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–∞–ª—å–Ω—ã–π user_id –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
              test_type: testResult.test_type,
              total_questions: testResult.total_questions,
              score: testResult.score,
              percentage: testResult.percentage,
              grade: testResult.grade,
              answers: testResult.answers,
              category_scores: testResult.category_scores,
              completed_at: testResult.completed_at
            }])
            .select()
          
          if (insertError) {
            console.error('‚ùå useTestUserMapping: –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –æ–∂–∏–¥–∞—é—â–µ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞:', insertError)
            return false
          }
          
          console.log('‚úÖ useTestUserMapping: –û–∂–∏–¥–∞—é—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –ë–î:', data)
          
          // –£–¥–∞–ª—è–µ–º –æ–∂–∏–¥–∞—é—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏–∑ localStorage
          localStorage.removeItem('pending_test_result')
          console.log('‚úÖ useTestUserMapping: –û–∂–∏–¥–∞—é—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç —É–¥–∞–ª–µ–Ω –∏–∑ localStorage')
          
          return true
        } catch (parseError) {
          console.error('‚ùå useTestUserMapping: –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ –æ–∂–∏–¥–∞—é—â–µ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞:', parseError)
          localStorage.removeItem('pending_test_result')
        }
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º localStorage –∏ sessionStorage –¥–ª—è –ø–æ–∏—Å–∫–∞ anonymousUserId
      const anonymousUserId = localStorage.getItem('anonymous_user_id') || sessionStorage.getItem('anonymous_user_id')
      console.log('üîç useTestUserMapping: –ò—â–µ–º anonymousUserId –≤ localStorage –∏ sessionStorage:', anonymousUserId)

      // –ï—Å–ª–∏ –µ—Å—Ç—å anonymousUserId, –∏—â–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ –Ω–µ–º—É
      if (anonymousUserId) {
        console.log('üîç useTestUserMapping: –ò—â–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ anonymousUserId:', anonymousUserId)
        const { data: testResults, error: testError } = await supabase
          .from('test_results')
          .select('id, user_id, test_type, completed_at')
          .eq('user_id', anonymousUserId)

        if (testError) {
          console.error('‚ùå useTestUserMapping: –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ anonymousUserId:', testError)
          return false
        }

        if (testResults && testResults.length > 0) {
          console.log('üîç useTestUserMapping: –ù–∞–π–¥–µ–Ω—ã —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ anonymousUserId:', testResults.length)
          
          // –û–±–Ω–æ–≤–ª—è–µ–º user_id –≤ —Ç–∞–±–ª–∏—Ü–µ test_results –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Ç–µ—Å—Ç–∞
          for (const testResult of testResults) {
            console.log('üîÑ useTestUserMapping: –û–±–Ω–æ–≤–ª—è–µ–º user_id –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Ç–µ—Å—Ç–∞:', testResult.id)
            
            const { error: updateError } = await supabase
              .from('test_results')
              .update({ user_id: userId })
              .eq('id', testResult.id)

            if (updateError) {
              console.error('‚ùå useTestUserMapping: –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ user_id:', updateError)
              continue
            }

            console.log('‚úÖ useTestUserMapping: user_id –æ–±–Ω–æ–≤–ª–µ–Ω –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞:', testResult.id)
          }

          console.log('‚úÖ useTestUserMapping: –í—Å–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∞ —Å–≤—è–∑–∞–Ω—ã —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã')
          return true
        }
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ sessionId –≤–∞–ª–∏–¥–Ω—ã–º UUID
      const isUUID = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i.test(sessionId)
      console.log('üîç useTestUserMapping: sessionId —è–≤–ª—è–µ—Ç—Å—è –≤–∞–ª–∏–¥–Ω—ã–º UUID:', isUUID, 'sessionId:', sessionId)

      if (!isUUID) {
        console.log('‚ö†Ô∏è useTestUserMapping: sessionId –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –≤–∞–ª–∏–¥–Ω—ã–º UUID, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–æ–∏—Å–∫')
        return false
      }

      // –ù–∞—Ö–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∞ –ø–æ session_id
      console.log('üîç useTestUserMapping: –ò—â–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∞ —Å user_id =', sessionId)
      const { data: testResults, error: testError } = await supabase
        .from('test_results')
        .select('id, user_id, test_type, completed_at')
        .eq('user_id', sessionId) // session_id –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–∞–∫ user_id –¥–ª—è –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

      if (testError) {
        console.error('‚ùå useTestUserMapping: –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ç–µ—Å—Ç–∞:', testError)
        console.error('‚ùå useTestUserMapping: –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', {
          code: testError.code,
          message: testError.message,
          details: testError.details,
          hint: testError.hint
        })
        
        // –î–ª—è –æ—à–∏–±–æ–∫ RLS (406, PGRST301) –Ω–µ –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ–º –∏—Å–∫–ª—é—á–µ–Ω–∏–µ, –∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º false
        if (testError.code === 'PGRST301' || testError.message?.includes('406')) {
          console.warn('‚ö†Ô∏è useTestUserMapping: –ü—Ä–æ–±–ª–µ–º—ã —Å RLS, –Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–±–æ—Ç—É')
          return false
        }
        
        throw testError
      }

      console.log('üîç useTestUserMapping: –ù–∞–π–¥–µ–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ç–µ—Å—Ç–∞:', testResults?.length || 0)
      if (testResults && testResults.length > 0) {
        console.log('üîç useTestUserMapping: –î–µ—Ç–∞–ª–∏ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:', testResults)
      }

      if (!testResults || testResults.length === 0) {
        console.log('‚ÑπÔ∏è useTestUserMapping: –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –¥–ª—è —Å–µ—Å—Å–∏–∏:', sessionId)
        return false
      }

      // –û–±–Ω–æ–≤–ª—è–µ–º user_id –≤ —Ç–∞–±–ª–∏—Ü–µ test_results –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Ç–µ—Å—Ç–∞
      for (const testResult of testResults) {
        console.log('üîÑ useTestUserMapping: –û–±–Ω–æ–≤–ª—è–µ–º user_id –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Ç–µ—Å—Ç–∞:', testResult.id)
        
        const { error: updateError } = await supabase
          .from('test_results')
          .update({ user_id: userId })
          .eq('id', testResult.id)

        if (updateError) {
          console.error('‚ùå useTestUserMapping: –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ user_id:', updateError)
          console.error('‚ùå useTestUserMapping: –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:', {
            code: updateError.code,
            message: updateError.message,
            details: updateError.details,
            hint: updateError.hint
          })
          
          // –î–ª—è –æ—à–∏–±–æ–∫ RLS (406, PGRST301) –Ω–µ –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ–º –∏—Å–∫–ª—é—á–µ–Ω–∏–µ, –∞ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º
          if (updateError.code === 'PGRST301' || updateError.message?.includes('406')) {
            console.warn('‚ö†Ô∏è useTestUserMapping: –ü—Ä–æ–±–ª–µ–º—ã —Å RLS –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —ç—Ç–æ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç')
            continue
          }
          
          throw updateError
        }

        console.log('‚úÖ useTestUserMapping: user_id –æ–±–Ω–æ–≤–ª–µ–Ω –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞:', testResult.id)
      }

      console.log('‚úÖ useTestUserMapping: –í—Å–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∞ —Å–≤—è–∑–∞–Ω—ã —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã')
      return true
    } catch (err) {
      console.error('‚ùå useTestUserMapping: –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–≤—è–∑—ã–≤–∞–Ω–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:', err)
      setError(err instanceof Error ? err.message : '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–≤—è–∑–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã')
      return false
    } finally {
      setIsLoading(false)
    }
  }

  const checkTableExists = async (): Promise<boolean> => {
    try {
      console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã test_user_mapping...')
      const { error } = await supabase
        .from('test_user_mapping')
        .select('id')
        .limit(1)

      if (error) {
        console.error('‚ùå –¢–∞–±–ª–∏—Ü–∞ test_user_mapping –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞:', error)
        return false
      }

      console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ test_user_mapping —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –¥–æ—Å—Ç—É–ø–Ω–∞')
      return true
    } catch (err) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ç–∞–±–ª–∏—Ü—ã test_user_mapping:', err)
      return false
    }
  }

  // –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤—Å–µ—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ç–µ—Å—Ç–∞
  const findAllTestResults = async (): Promise<any[]> => {
    try {
      console.log('üîç useTestUserMapping: –ò—â–µ–º –≤—Å–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∞ –≤ —Ç–∞–±–ª–∏—Ü–µ test_results')
      const { data: allResults, error } = await supabase
        .from('test_results')
        .select('id, user_id, test_type, completed_at, score')
        .order('completed_at', { ascending: false })
        .limit(10)

      if (error) {
        console.error('‚ùå useTestUserMapping: –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –≤—Å–µ—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:', error)
        return []
      }

      console.log('üîç useTestUserMapping: –ù–∞–π–¥–µ–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ç–µ—Å—Ç–∞:', allResults?.length || 0)
      if (allResults && allResults.length > 0) {
        console.log('üîç useTestUserMapping: –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∞:', allResults)
      }

      return allResults || []
    } catch (err) {
      console.error('‚ùå useTestUserMapping: –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –≤—Å–µ—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:', err)
      return []
    }
  }

  return {
    createMapping,
    getTestResultsForUser,
    linkExistingTestResults,
    checkTableExists,
    findAllTestResults,
    isLoading,
    error
  }
}
