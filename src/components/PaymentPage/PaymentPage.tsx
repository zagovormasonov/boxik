import React, { useEffect, useState } from 'react'
import { useNavigate } from 'react-router-dom'
import { CreditCard, Shield, Check, ArrowLeft } from 'lucide-react'
import { useAuth } from '../../contexts/AuthContext'
import { usePayment } from '../../shared/hooks/usePayment'
import SupabaseDiagnostics from '../SupabaseDiagnostics/SupabaseDiagnostics'

const PaymentPage: React.FC = () => {
  const navigate = useNavigate()
  const { authState } = useAuth()
  const { createPayment, isProcessing, error } = usePayment()
  const [isCreatingPayment, setIsCreatingPayment] = useState(false)
  const [showDiagnostics, setShowDiagnostics] = useState(false)

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
  useEffect(() => {
    if (!authState.user) {
      console.log('PaymentPage: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –ª–µ–Ω–¥–∏–Ω–≥')
      navigate('/subscription')
    }
  }, [authState.user, navigate])

  const handlePayment = async () => {
    if (!authState.user) return

    setIsCreatingPayment(true)
    
    try {
      console.log('–°–æ–∑–¥–∞–µ–º –ø–ª–∞—Ç–µ–∂ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', {
        userId: authState.user.id,
        userEmail: authState.user.email,
        userName: authState.user.name
      })

      const result = await createPayment({
        amount: 1,
        description: '–ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ —Ç–µ—Å—Ç–∞ –ë–ü–î',
        userId: authState.user.id,
        userEmail: authState.user.email
      })

      if (result.success && result.paymentUrl) {
        console.log('–ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –æ–ø–ª–∞—Ç—É:', result)
        window.location.href = result.paymentUrl
      } else {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–ª–∞—Ç–µ–∂–∞:', result.error)
      }
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø–ª–∞—Ç–µ–∂–∞:', err)
    } finally {
      setIsCreatingPayment(false)
    }
  }

  const handleBackToLanding = () => {
    navigate('/subscription')
  }

  if (!authState.user) {
    return (
      <div className="payment-page">
        <div className="payment-container">
          <div className="loading-state">
            <div className="loading-spinner"></div>
            <p>–ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é...</p>
          </div>
        </div>
      </div>
    )
  }

  return (
    <div className="payment-page">
      <div className="payment-container">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="payment-header">
          <button 
            onClick={handleBackToLanding}
            className="back-button"
          >
            <ArrowLeft size={20} />
            –ù–∞–∑–∞–¥ –∫ –ø–æ–¥–ø–∏—Å–∫–µ
          </button>
          
          <div className="success-icon">
            <Check size={40} />
          </div>
          <h1 className="payment-title">–û–ø–ª–∞—Ç–∞ –ø–æ–¥–ø–∏—Å–∫–∏</h1>
          <p className="payment-subtitle">
            –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {authState.user.name}! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –æ–ø–ª–∞—Ç–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –∏ –ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º —Ç–µ—Å—Ç–∞.
          </p>
        </div>

        {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ */}
        <div className="user-info-card">
          <h3>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ</h3>
          <div className="user-details">
            <div className="user-detail">
              <span className="label">–ò–º—è:</span>
              <span className="value">{authState.user.name}</span>
            </div>
            <div className="user-detail">
              <span className="label">Email:</span>
              <span className="value">{authState.user.email}</span>
            </div>
            {authState.user.avatar && (
              <div className="user-detail">
                <span className="label">–ê–≤–∞—Ç–∞—Ä:</span>
                <img src={authState.user.avatar} alt="–ê–≤–∞—Ç–∞—Ä" className="user-avatar" />
              </div>
            )}
          </div>
        </div>

        {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–¥–ø–∏—Å–∫–µ */}
        <div className="subscription-info-card">
          <h3>–ß—Ç–æ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ</h3>
          <div className="features-list">
            <div className="feature-item">
              <Check size={20} />
              <span>–î–µ—Ç–∞–ª—å–Ω—ã–π PDF –æ—Ç—á–µ—Ç —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ —Ç–µ—Å—Ç–∞</span>
            </div>
            <div className="feature-item">
              <Check size={20} />
              <span>–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É</span>
            </div>
            <div className="feature-item">
              <Check size={20} />
              <span>–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –æ—Ç ChatGPT</span>
            </div>
            <div className="feature-item">
              <Check size={20} />
              <span>–ü–æ–∂–∏–∑–Ω–µ–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º</span>
            </div>
          </div>
        </div>

        {/* –¶–µ–Ω–∞ –∏ –∫–Ω–æ–ø–∫–∞ –æ–ø–ª–∞—Ç—ã */}
        <div className="pricing-card">
          <div className="pricing-header">
            <h3>–ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø</h3>
            <div className="pricing-price">
              <span className="price-amount">1</span>
              <span className="price-currency">‚ÇΩ</span>
            </div>
          </div>
          
          <div className="payment-security">
            <Shield size={16} />
            <span>–ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ–ø–ª–∞—Ç–∞ —á–µ—Ä–µ–∑ –°–ë–ü –¢–∏–Ω—å–∫–æ—Ñ—Ñ</span>
          </div>

          <button 
            onClick={handlePayment}
            disabled={isProcessing || isCreatingPayment}
            className="payment-button"
          >
            <CreditCard size={20} />
            {isProcessing || isCreatingPayment ? '–°–æ–∑–¥–∞–µ–º –ø–ª–∞—Ç–µ–∂...' : '–û–ø–ª–∞—Ç–∏—Ç—å —á–µ—Ä–µ–∑ –°–ë–ü'}
          </button>

          {error && (
            <div className="error-message">
              <p>–û—à–∏–±–∫–∞: {error}</p>
            </div>
          )}
        </div>

        {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
        <div className="additional-info">
          <p className="info-text">
            üí≥ –û–ø–ª–∞—Ç–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —á–µ—Ä–µ–∑ –±–µ–∑–æ–ø–∞—Å–Ω—É—é —Å–∏—Å—Ç–µ–º—É –°–ë–ü –¢–∏–Ω—å–∫–æ—Ñ—Ñ
          </p>
          <p className="info-text">
            üîí –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –Ω–∞–¥–µ–∂–Ω–æ –∑–∞—â–∏—â–µ–Ω—ã –∏ –Ω–µ –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è —Ç—Ä–µ—Ç—å–∏–º –ª–∏—Ü–∞–º
          </p>
          <p className="info-text">
            ‚ö° –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã –≤—ã —Å—Ä–∞–∑—É –ø–æ–ª—É—á–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º
          </p>
          
          <button
            onClick={() => setShowDiagnostics(!showDiagnostics)}
            style={{
              marginTop: '15px',
              padding: '8px 16px',
              background: '#6b7280',
              color: 'white',
              border: 'none',
              borderRadius: '6px',
              cursor: 'pointer',
              fontSize: '12px'
            }}
          >
            {showDiagnostics ? '–°–∫—Ä—ã—Ç—å' : '–ü–æ–∫–∞–∑–∞—Ç—å'} –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É Supabase
          </button>
        </div>

        {/* –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ Supabase */}
        {showDiagnostics && <SupabaseDiagnostics />}
      </div>
    </div>
  )
}

export default PaymentPage
