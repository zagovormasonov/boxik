import React, { useEffect, useState } from 'react'
import { useNavigate, useSearchParams } from 'react-router-dom'
import { Check, X, Loader } from 'lucide-react'
import { usePaymentContext } from '../../contexts/PaymentContext'
import { useSubscriptions } from '../../shared/hooks/useSubscriptions'

const PaymentCallback: React.FC = () => {
  const navigate = useNavigate()
  const [searchParams] = useSearchParams()
  const { setHasPaid, refreshPaymentStatus } = usePaymentContext()
  const { updateSubscriptionStatus } = useSubscriptions()
  const [status, setStatus] = useState<'loading' | 'success' | 'error'>('loading')
  const [message, setMessage] = useState('')

  useEffect(() => {
    const processPaymentCallback = async () => {
      try {
        // –ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –æ—Ç –¢–∏–Ω—å–∫–æ—Ñ—Ñ
        const paymentId = searchParams.get('PaymentId')
        const status = searchParams.get('Status')
        const errorCode = searchParams.get('ErrorCode')
        const message = searchParams.get('Message')
        const orderId = searchParams.get('OrderId')
        
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –æ—Ç –¢–∏–Ω—å–∫–æ—Ñ—Ñ
        const success = searchParams.get('Success')
        const result = searchParams.get('Result')
        const state = searchParams.get('State')
        const terminalKey = searchParams.get('TerminalKey')

        console.log('–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º callback –æ—Ç –¢–∏–Ω—å–∫–æ—Ñ—Ñ:', {
          paymentId,
          status,
          errorCode,
          message,
          orderId,
          success,
          result,
          state,
          terminalKey,
          isTestPayment: paymentId?.startsWith('test_payment_'),
          allParams: Object.fromEntries(searchParams.entries())
        })

        // –ò–∑–≤–ª–µ–∫–∞–µ–º userId –∏–∑ OrderId –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
        let userId = null
        if (orderId?.startsWith('u')) {
          // OrderId —Ñ–æ—Ä–º–∞—Ç: u{userId8}{timestamp8}{random6}
          // –ò–∑–≤–ª–µ–∫–∞–µ–º userId (–ø–µ—Ä–≤—ã–µ 8 —Å–∏–º–≤–æ–ª–æ–≤ –ø–æ—Å–ª–µ 'u')
          userId = orderId.substring(1, 9)
          console.log('–ò–∑–≤–ª–µ—á–µ–Ω–Ω—ã–π userId –∏–∑ OrderId:', userId, '–∏–∑ OrderId:', orderId)
        } else {
          console.log('OrderId –Ω–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å "u", –≤–æ–∑–º–æ–∂–Ω–æ —ç—Ç–æ –Ω–µ –Ω–∞—à –ø–ª–∞—Ç–µ–∂:', orderId)
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞
        console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞:', status)
        
        // –ï—Å–ª–∏ —Å—Ç–∞—Ç—É—Å null, –Ω–æ –µ—Å—Ç—å PaymentId –∏ OrderId, —Å—á–∏—Ç–∞–µ–º –ø–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–Ω—ã–º
        // –¢–∞–∫–∂–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä Success
        if ((status === null || status === '') && paymentId && orderId && (success === 'true' || success === null)) {
          console.log('‚úÖ –°—Ç–∞—Ç—É—Å null/–ø—É—Å—Ç–æ–π, –Ω–æ –µ—Å—Ç—å PaymentId –∏ OrderId - —Å—á–∏—Ç–∞–µ–º –ø–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–Ω—ã–º')
          setStatus('success')
          setMessage('–û–ø–ª–∞—Ç–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!')
          
          // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏ –≤ Supabase
          console.log('üîÑ –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏ –≤ Supabase (—Å—Ç–∞—Ç—É—Å null):', paymentId)
          try {
            const updatedSubscription = await updateSubscriptionStatus(paymentId, 'confirmed', {
              callback_status: 'null_but_successful',
              callback_message: '–ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω (—Å—Ç–∞—Ç—É—Å –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω)',
              callback_order_id: orderId,
              callback_user_id: userId,
              completed_at: new Date().toISOString()
            })
            
            if (updatedSubscription) {
              console.log('‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞:', updatedSubscription)
              setHasPaid(true)
              localStorage.setItem('hasPaid', 'true')
              await refreshPaymentStatus()
            } else {
              console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É - updateSubscriptionStatus –≤–µ—Ä–Ω—É–ª null')
            }
          } catch (updateError) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏:', updateError)
          }
          
          // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç
          setTimeout(() => {
            console.log('üîÑ –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –≤ –ø—Ä–æ—Ñ–∏–ª—å –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã (—Å—Ç–∞—Ç—É—Å null)')
            navigate('/profile')
          }, 3000)
        } else if (status === 'CONFIRMED' || status === 'AUTHORIZED' || status === 'COMPLETED' || status === 'SUCCESS') {
          // –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω
          console.log('‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω, —Å—Ç–∞—Ç—É—Å:', status)
          setStatus('success')
          setMessage('–û–ø–ª–∞—Ç–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!')
          
          // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏ –≤ Supabase
          if (paymentId) {
            console.log('üîÑ –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏ –≤ Supabase:', paymentId)
            try {
              const updatedSubscription = await updateSubscriptionStatus(paymentId, 'confirmed', {
                callback_status: status,
                callback_message: message,
                callback_order_id: orderId,
                callback_user_id: userId,
                completed_at: new Date().toISOString()
              })
              
              if (updatedSubscription) {
                console.log('‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞:', updatedSubscription)
                // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–ø–ª–∞—Ç—ã
                setHasPaid(true)
                // –û–±–Ω–æ–≤–ª—è–µ–º localStorage
                localStorage.setItem('hasPaid', 'true')
                // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∏–∑ Supabase
                await refreshPaymentStatus()
              } else {
                console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É - updateSubscriptionStatus –≤–µ—Ä–Ω—É–ª null')
              }
            } catch (updateError) {
              console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏:', updateError)
            }
          } else {
            console.error('‚ùå PaymentId –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –Ω–µ –º–æ–∂–µ–º –æ–±–Ω–æ–≤–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É')
          }
          
          // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã (—É–≤–µ–ª–∏—á–∏–≤–∞–µ–º –≤—Ä–µ–º—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è)
          setTimeout(() => {
            console.log('üîÑ –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –≤ –ø—Ä–æ—Ñ–∏–ª—å –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã')
            navigate('/profile')
          }, 3000)
        } else if (status === 'REJECTED' || status === 'CANCELLED' || success === 'false') {
          // –ü–ª–∞—Ç–µ–∂ –æ—Ç–∫–ª–æ–Ω–µ–Ω –∏–ª–∏ –æ—Ç–º–µ–Ω–µ–Ω
          console.log('‚ùå –ü–ª–∞—Ç–µ–∂ –æ—Ç–∫–ª–æ–Ω–µ–Ω –∏–ª–∏ –æ—Ç–º–µ–Ω–µ–Ω, —Å—Ç–∞—Ç—É—Å:', status, 'success:', success)
          setStatus('error')
          setMessage(message || '–ü–ª–∞—Ç–µ–∂ –±—ã–ª –æ—Ç–∫–ª–æ–Ω–µ–Ω –∏–ª–∏ –æ—Ç–º–µ–Ω–µ–Ω')
          
          // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏ –≤ Supabase
          if (paymentId) {
            console.log('–û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏ –≤ Supabase (–æ—Ç–∫–ª–æ–Ω–µ–Ω–æ):', paymentId)
            await updateSubscriptionStatus(paymentId, 'cancelled', {
              callback_status: status,
              callback_message: message,
              callback_order_id: orderId,
              callback_user_id: userId,
              completed_at: new Date().toISOString()
            })
          }
          
          // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –ª–µ–Ω–¥–∏–Ω–≥ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
          setTimeout(() => {
            navigate('/subscription')
          }, 3000)
        } else if (paymentId && orderId) {
          // Fallback: –µ—Å–ª–∏ –µ—Å—Ç—å PaymentId –∏ OrderId, –Ω–æ –Ω–µ—Ç —è–≤–Ω–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞ –æ—à–∏–±–∫–∏, —Å—á–∏—Ç–∞–µ–º —É—Å–ø–µ—à–Ω—ã–º
          console.log('‚úÖ Fallback: –µ—Å—Ç—å PaymentId –∏ OrderId, —Å—á–∏—Ç–∞–µ–º –ø–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–Ω—ã–º')
          setStatus('success')
          setMessage('–û–ø–ª–∞—Ç–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!')
          
          // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏ –≤ Supabase
          console.log('üîÑ –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏ –≤ Supabase (fallback):', paymentId)
          try {
            const updatedSubscription = await updateSubscriptionStatus(paymentId, 'confirmed', {
              callback_status: status || 'fallback_success',
              callback_message: message || '–ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω (fallback –ª–æ–≥–∏–∫–∞)',
              callback_order_id: orderId,
              callback_user_id: userId,
              completed_at: new Date().toISOString()
            })
            
            if (updatedSubscription) {
              console.log('‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞:', updatedSubscription)
              setHasPaid(true)
              localStorage.setItem('hasPaid', 'true')
              await refreshPaymentStatus()
            } else {
              console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É - updateSubscriptionStatus –≤–µ—Ä–Ω—É–ª null')
            }
          } catch (updateError) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏:', updateError)
          }
          
          // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç
          setTimeout(() => {
            console.log('üîÑ –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –≤ –ø—Ä–æ—Ñ–∏–ª—å –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã (fallback)')
            navigate('/profile')
          }, 3000)
        } else {
          // –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å—Ç–∞—Ç—É—Å
          console.log('‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞:', status)
          setStatus('error')
          setMessage(`–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞: ${status}`)
          
          // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏ –≤ Supabase
          if (paymentId) {
            console.log('–û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏ –≤ Supabase (–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ):', paymentId)
            await updateSubscriptionStatus(paymentId, 'failed', {
              callback_status: status,
              callback_message: message,
              callback_order_id: orderId,
              callback_user_id: userId,
              completed_at: new Date().toISOString()
            })
          }
          
          setTimeout(() => {
            navigate('/subscription')
          }, 3000)
        }
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ callback:', error)
        setStatus('error')
        setMessage('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø–ª–∞—Ç–µ–∂–∞')
        
        setTimeout(() => {
          navigate('/subscription')
        }, 3000)
      }
    }

    processPaymentCallback()
  }, [searchParams, navigate, setHasPaid])

  return (
    <div style={{
      minHeight: '100vh',
      display: 'flex',
      alignItems: 'center',
      justifyContent: 'center',
      background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
      padding: '20px'
    }}>
      <div style={{
        background: 'white',
        borderRadius: '20px',
        padding: '40px',
        textAlign: 'center',
        boxShadow: '0 20px 40px rgba(0, 0, 0, 0.1)',
        maxWidth: '400px',
        width: '100%'
      }}>
        {status === 'loading' && (
          <>
            <div style={{
              width: '80px',
              height: '80px',
              background: 'linear-gradient(135deg, #3b82f6, #1d4ed8)',
              borderRadius: '50%',
              display: 'flex',
              alignItems: 'center',
              justifyContent: 'center',
              margin: '0 auto 20px',
              color: 'white'
            }}>
              <Loader size={32} className="animate-spin" />
            </div>
            <h2 style={{ margin: '0 0 10px 0', color: '#1f2937' }}>
              –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–ª–∞—Ç–µ–∂...
            </h2>
            <p style={{ color: '#6b7280', margin: 0 }}>
              –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ
            </p>
          </>
        )}

        {status === 'success' && (
          <>
            <div style={{
              width: '80px',
              height: '80px',
              background: 'linear-gradient(135deg, #10b981, #059669)',
              borderRadius: '50%',
              display: 'flex',
              alignItems: 'center',
              justifyContent: 'center',
              margin: '0 auto 20px',
              color: 'white'
            }}>
              <Check size={32} />
            </div>
            <h2 style={{ margin: '0 0 10px 0', color: '#1f2937' }}>
              –û–ø–ª–∞—Ç–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!
            </h2>
            <p style={{ color: '#6b7280', margin: '0 0 20px 0' }}>
              –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º —Ç–µ—Å—Ç–∞
            </p>
            <p style={{ color: '#9ca3af', fontSize: '14px', margin: 0 }}>
              –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç...
            </p>
          </>
        )}

        {status === 'error' && (
          <>
            <div style={{
              width: '80px',
              height: '80px',
              background: 'linear-gradient(135deg, #ef4444, #dc2626)',
              borderRadius: '50%',
              display: 'flex',
              alignItems: 'center',
              justifyContent: 'center',
              margin: '0 auto 20px',
              color: 'white'
            }}>
              <X size={32} />
            </div>
            <h2 style={{ margin: '0 0 10px 0', color: '#1f2937' }}>
              –û—à–∏–±–∫–∞ –æ–ø–ª–∞—Ç—ã
            </h2>
            <p style={{ color: '#6b7280', margin: '0 0 20px 0' }}>
              {message}
            </p>
            <p style={{ color: '#9ca3af', fontSize: '14px', margin: 0 }}>
              –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –æ–ø–ª–∞—Ç–µ...
            </p>
          </>
        )}
      </div>
    </div>
  )
}

export default PaymentCallback
