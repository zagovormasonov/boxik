import React, { useEffect, useState } from 'react'
import { useNavigate, useSearchParams } from 'react-router-dom'
import { Check, X, Loader } from 'lucide-react'
import { usePaymentContext } from '../../contexts/PaymentContext'
import { useSubscriptions } from '../../shared/hooks/useSubscriptions'
import { useUserHasPaid } from '../../shared/hooks/useUserHasPaid'
import { useAuth } from '../../contexts/AuthContext'
import { useTestUserMapping } from '../../shared/hooks/useTestUserMapping'

const PaymentCallback: React.FC = () => {
  const navigate = useNavigate()
  const [searchParams] = useSearchParams()
  const { setHasPaid, refreshPaymentStatus, forceSetPaid } = usePaymentContext()
  const { updateSubscriptionStatus } = useSubscriptions()
  const { setUserPaid, getUserHasPaid } = useUserHasPaid()
  const { authState } = useAuth()
  const { linkExistingTestResults } = useTestUserMapping()
  const [status, setStatus] = useState<'loading' | 'success' | 'error'>('loading')
  const [message, setMessage] = useState('')

  useEffect(() => {
    const processPaymentCallback = async () => {
      console.log('üöÄ PaymentCallback: –ù–∞—á–∏–Ω–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É callback')
      console.log('üöÄ PaymentCallback: URL:', window.location.href)
      console.log('üöÄ PaymentCallback: Search params:', Object.fromEntries(searchParams.entries()))
      
      try {
        // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –æ–ø–ª–∞—Ç–∏–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Ä–∞–Ω–µ–µ
        if (authState.user?.id) {
          try {
            console.log('üîç PaymentCallback: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç—ã –≤ –ë–î –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', authState.user.id)
            const currentHasPaid = await getUserHasPaid(authState.user.id)
            console.log('üîç PaymentCallback: –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç—ã –≤ –ë–î:', currentHasPaid)
            
            if (currentHasPaid) {
              console.log('‚úÖ PaymentCallback: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –æ–ø–ª–∞—Ç–∏–ª, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –≤ –õ–ö')
              forceSetPaid(true)
              setStatus('success')
              setMessage('–û–ø–ª–∞—Ç–∞ —É–∂–µ –±—ã–ª–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!')
              setTimeout(() => {
                console.log('üîÑ PaymentCallback: –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –≤ –ø—Ä–æ—Ñ–∏–ª—å (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –æ–ø–ª–∞—Ç–∏–ª)')
                navigate('/profile')
              }, 2000)
              return
            }
          } catch (error) {
            console.error('‚ùå PaymentCallback: –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ç–µ–∫—É—â–µ–≥–æ —Å—Ç–∞—Ç—É—Å–∞ –æ–ø–ª–∞—Ç—ã:', error)
            // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É callback
          }
        }
        // –ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –æ—Ç –¢–∏–Ω—å–∫–æ—Ñ—Ñ
        const paymentId = searchParams.get('PaymentId') || searchParams.get('payment_id') || searchParams.get('PaymentID')
        const status = searchParams.get('Status') || searchParams.get('status')
        const errorCode = searchParams.get('ErrorCode') || searchParams.get('error_code')
        const message = searchParams.get('Message') || searchParams.get('message')
        const orderId = searchParams.get('OrderId') || searchParams.get('order_id') || searchParams.get('OrderID')
        
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –æ—Ç –¢–∏–Ω—å–∫–æ—Ñ—Ñ
        const success = searchParams.get('Success') || searchParams.get('success')
        const result = searchParams.get('Result') || searchParams.get('result')
        const state = searchParams.get('State') || searchParams.get('state')
        const terminalKey = searchParams.get('TerminalKey') || searchParams.get('terminal_key')

        console.log('üìã PaymentCallback: –ü–æ–ª—É—á–µ–Ω—ã –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:', {
          paymentId,
          status,
          errorCode,
          message,
          orderId,
          success,
          result,
          state,
          terminalKey,
          isTestPayment: paymentId?.startsWith('test_payment_'),
          allParams: Object.fromEntries(searchParams.entries())
        })
        
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ URL
        console.log('üîç PaymentCallback: –í—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã URL:', window.location.search)
        console.log('üîç PaymentCallback: –ü–æ–ª–Ω—ã–π URL:', window.location.href)
        console.log('üîç PaymentCallback: –í—Å–µ searchParams:', Array.from(searchParams.entries()))

        // –ò–∑–≤–ª–µ–∫–∞–µ–º userId –∏–∑ OrderId –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
        let userId = null
        if (orderId?.startsWith('u')) {
          // OrderId —Ñ–æ—Ä–º–∞—Ç: u{userId8}{timestamp8}{random6}
          // –ò–∑–≤–ª–µ–∫–∞–µ–º userId (–ø–µ—Ä–≤—ã–µ 8 —Å–∏–º–≤–æ–ª–æ–≤ –ø–æ—Å–ª–µ 'u')
          userId = orderId.substring(1, 9)
          console.log('–ò–∑–≤–ª–µ—á–µ–Ω–Ω—ã–π userId –∏–∑ OrderId:', userId, '–∏–∑ OrderId:', orderId)
        } else {
          console.log('OrderId –Ω–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å "u", –≤–æ–∑–º–æ–∂–Ω–æ —ç—Ç–æ –Ω–µ –Ω–∞—à –ø–ª–∞—Ç–µ–∂:', orderId)
        }

        // –ü–†–û–í–ï–†–Ø–ï–ú –†–ï–ê–õ–¨–ù–´–ï –ü–ê–†–ê–ú–ï–¢–†–´ –û–ü–õ–ê–¢–´
        console.log('üéØ PaymentCallback: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∞–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –æ–ø–ª–∞—Ç—ã')
        console.log('üéØ PaymentCallback: PaymentId =', paymentId, 'OrderId =', orderId)
        console.log('üéØ PaymentCallback: Status =', status, 'Success =', success)
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –ø–ª–∞—Ç–µ–∂–∞ –±–æ–ª–µ–µ –≥–∏–±–∫–æ
        const hasPaymentId = paymentId && paymentId.length > 0
        const hasOrderId = orderId && orderId.length > 0
        const isSuccessStatus = status === 'CONFIRMED' || status === 'confirmed' || status === 'AUTHORIZED' || status === 'authorized'
        const isSuccessFlag = success === 'true' || success === 'True' || success === '1'
        const isSuccessResult = result === '0' || result === 'OK' || result === 'ok'
        
        console.log('üîç PaymentCallback: –ê–Ω–∞–ª–∏–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤:', {
          hasPaymentId,
          hasOrderId,
          isSuccessStatus,
          isSuccessFlag,
          isSuccessResult,
          paymentId,
          orderId,
          status,
          success,
          result
        })
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º hasPaid: true –µ—Å–ª–∏ –µ—Å—Ç—å PaymentId –ò (OrderId –ò–õ–ò —É—Å–ø–µ—à–Ω—ã–π —Å—Ç–∞—Ç—É—Å)
        if (hasPaymentId && (hasOrderId || isSuccessStatus || isSuccessFlag || isSuccessResult)) {
          console.log('‚úÖ PaymentCallback: –ü–ª–∞—Ç–µ–∂ —Å—á–∏—Ç–∞–µ—Ç—Å—è —É—Å–ø–µ—à–Ω—ã–º!')
          
          // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º hasPaid: true —Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–µ–∞–ª—å–Ω–æ–π –æ–ø–ª–∞—Ç—ã
          console.log('üîÑ PaymentCallback: –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º hasPaid: true –¥–ª—è —Ä–µ–∞–ª—å–Ω–æ–π –æ–ø–ª–∞—Ç—ã')
          forceSetPaid(true)
          
          // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –ë–î —Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–µ–∞–ª—å–Ω–æ–π –æ–ø–ª–∞—Ç—ã
          if (authState.user?.id) {
            try {
              console.log('üîÑ PaymentCallback: –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –ë–î –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', authState.user.id)
              const updateResult = await setUserPaid(authState.user.id)
              console.log('‚úÖ PaymentCallback: –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ë–î:', updateResult)
              if (updateResult) {
                console.log('‚úÖ PaymentCallback: –°—Ç–∞—Ç—É—Å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω –≤ –ë–î')
              } else {
                console.error('‚ùå PaymentCallback: –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å –≤ –ë–î')
              }
            } catch (error) {
              console.error('‚ùå PaymentCallback: –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –≤ –ë–î:', error)
            }
          } else {
            console.error('‚ùå PaymentCallback: –ù–µ—Ç authState.user.id –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ë–î')
          }
          
          setStatus('success')
          setMessage('–û–ø–ª–∞—Ç–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!')
          
          // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏ –≤ Supabase
          console.log('üîÑ PaymentCallback: –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏ –≤ Supabase:', paymentId)
          try {
            const updatedSubscription = await updateSubscriptionStatus(paymentId, 'confirmed', {
              callback_status: status || 'simplified_success',
              callback_message: message || '–ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω (—É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –ª–æ–≥–∏–∫–∞)',
              callback_order_id: orderId,
              callback_user_id: userId,
              completed_at: new Date().toISOString()
            })
            
            if (updatedSubscription) {
              console.log('‚úÖ PaymentCallback: –ü–æ–¥–ø–∏—Å–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞:', updatedSubscription)
              forceSetPaid(true)
              // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
              await refreshPaymentStatus()
            } else {
              console.error('‚ùå PaymentCallback: –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É - updateSubscriptionStatus –≤–µ—Ä–Ω—É–ª null')
              // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç—ã –¥–∞–∂–µ –µ—Å–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å
              console.log('üîÑ PaymentCallback: –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç—ã')
              forceSetPaid(true)
              // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
              await refreshPaymentStatus()
            }
          } catch (updateError) {
            console.error('‚ùå PaymentCallback: –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏:', updateError)
            // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç—ã –¥–∞–∂–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
            console.log('üîÑ PaymentCallback: –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç—ã –ø–æ—Å–ª–µ –æ—à–∏–±–∫–∏')
            forceSetPaid(true)
          }
          
          // –°–≤—è–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∞ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã
          if (authState.user?.id) {
            try {
              console.log('üîó PaymentCallback: –°–≤—è–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∞ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã:', authState.user.id)
              const sessionId = localStorage.getItem('test_session_id') || 'anonymous'
              console.log('üîó PaymentCallback: Session ID –¥–ª—è —Å–≤—è–∑—ã–≤–∞–Ω–∏—è:', sessionId)
              
              const linked = await linkExistingTestResults(authState.user.id, sessionId)
              if (linked) {
                console.log('‚úÖ PaymentCallback: –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∞ —É—Å–ø–µ—à–Ω–æ —Å–≤—è–∑–∞–Ω—ã —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã')
              } else {
                console.log('‚ÑπÔ∏è PaymentCallback: –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∞ –¥–ª—è —Å–≤—è–∑—ã–≤–∞–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã')
              }
            } catch (linkError) {
              console.error('‚ùå PaymentCallback: –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–≤—è–∑—ã–≤–∞–Ω–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ç–µ—Å—Ç–∞ –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã:', linkError)
            }
          }
          
          // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç
          setTimeout(() => {
            console.log('üîÑ PaymentCallback: –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –≤ –ø—Ä–æ—Ñ–∏–ª—å –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã')
            navigate('/profile')
          }, 3000)
        } else {
          console.log('‚ùå PaymentCallback: –ü–ª–∞—Ç–µ–∂ –Ω–µ —Å—á–∏—Ç–∞–µ—Ç—Å—è —É—Å–ø–µ—à–Ω—ã–º –ø–æ –æ—Å–Ω–æ–≤–Ω—ã–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º')
          console.log('‚ùå PaymentCallback: PaymentId =', paymentId, 'OrderId =', orderId)
          console.log('‚ùå PaymentCallback: –í—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –æ—Ç –¢–∏–Ω—å–∫–æ—Ñ—Ñ:', Object.fromEntries(searchParams.entries()))
          
          // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞: –µ—Å–ª–∏ –µ—Å—Ç—å —Ö–æ—Ç—è –±—ã PaymentId, –≤–æ–∑–º–æ–∂–Ω–æ –ø–ª–∞—Ç–µ–∂ –ø—Ä–æ—à–µ–ª
          if (hasPaymentId) {
            console.log('‚ö†Ô∏è PaymentCallback: –ï—Å—Ç—å PaymentId, –Ω–æ –Ω–µ—Ç –¥—Ä—É–≥–∏—Ö –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–π —É—Å–ø–µ—Ö–∞')
            console.log('‚ö†Ô∏è PaymentCallback: –í–æ–∑–º–æ–∂–Ω–æ –ø–ª–∞—Ç–µ–∂ –ø—Ä–æ—à–µ–ª, –Ω–æ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø—Ä–∏—à–ª–∏ –≤ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ')
            
            // –ï—Å–ª–∏ –µ—Å—Ç—å PaymentId, —Å—á–∏—Ç–∞–µ–º –ø–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–Ω—ã–º (–∫–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–≤–Ω—ã–π –ø–æ–¥—Ö–æ–¥)
            console.log('‚úÖ PaymentCallback: –ü—Ä–∏–Ω–∏–º–∞–µ–º —Ä–µ—à–µ–Ω–∏–µ —Å—á–∏—Ç–∞—Ç—å –ø–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–Ω—ã–º –∏–∑-–∑–∞ –Ω–∞–ª–∏—á–∏—è PaymentId')
            forceSetPaid(true)
            
            if (authState.user?.id) {
              try {
                console.log('üîÑ PaymentCallback: –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –ë–î –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', authState.user.id)
                const updateResult = await setUserPaid(authState.user.id)
                console.log('‚úÖ PaymentCallback: –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ë–î (PaymentId fallback):', updateResult)
                if (updateResult) {
                  console.log('‚úÖ PaymentCallback: –°—Ç–∞—Ç—É—Å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω –≤ –ë–î (PaymentId fallback)')
                } else {
                  console.error('‚ùå PaymentCallback: –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å –≤ –ë–î (PaymentId fallback)')
                }
              } catch (error) {
                console.error('‚ùå PaymentCallback: –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –≤ –ë–î (PaymentId fallback):', error)
              }
            } else {
              console.error('‚ùå PaymentCallback: –ù–µ—Ç authState.user.id –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ë–î (PaymentId fallback)')
            }
            
            setStatus('success')
            setMessage('–û–ø–ª–∞—Ç–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!')
            
            setTimeout(() => {
              console.log('üîÑ PaymentCallback: –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –≤ –ø—Ä–æ—Ñ–∏–ª—å –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã')
              navigate('/profile')
            }, 3000)
            return
          }
          
          // –ï—Å–ª–∏ –Ω–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –≤–æ–æ–±—â–µ, –≤–æ–∑–º–æ–∂–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ø–∞–ª –ø–æ –ø—Ä—è–º–æ–π —Å—Å—ã–ª–∫–µ
          const allParams = Object.fromEntries(searchParams.entries())
          if (Object.keys(allParams).length === 0) {
            console.log('üîÑ PaymentCallback: –ù–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ URL')
            console.log('üîÑ PaymentCallback: –í–æ–∑–º–æ–∂–Ω–æ —ç—Ç–æ SuccessURL/FailURL —Ä–µ–¥–∏—Ä–µ–∫—Ç –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤')
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–ª–∞—Ç–µ–∂–µ –≤ localStorage
            const paymentCreatedAt = localStorage.getItem('paymentCreatedAt')
            if (paymentCreatedAt) {
              const paymentTime = parseInt(paymentCreatedAt)
              const timeDiff = Date.now() - paymentTime
              const fiveMinutes = 5 * 60 * 1000 // 5 –º–∏–Ω—É—Ç
              
              console.log('üîÑ PaymentCallback: –ù–∞–π–¥–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–ª–∞—Ç–µ–∂–µ –≤ localStorage')
              console.log('üîÑ PaymentCallback: –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞:', new Date(paymentTime).toISOString())
              console.log('üîÑ PaymentCallback: –ü—Ä–æ—à–ª–æ –≤—Ä–µ–º–µ–Ω–∏:', timeDiff, '–º—Å')
              
              if (timeDiff < fiveMinutes) {
                console.log('‚úÖ PaymentCallback: –ü–ª–∞—Ç–µ–∂ –±—ã–ª —Å–æ–∑–¥–∞–Ω –Ω–µ–¥–∞–≤–Ω–æ, —Å—á–∏—Ç–∞–µ–º –µ–≥–æ —É—Å–ø–µ—à–Ω—ã–º')
                forceSetPaid(true)
                
                if (authState.user?.id) {
                  try {
                    console.log('üîÑ PaymentCallback: –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –ë–î –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', authState.user.id)
                    const updateResult = await setUserPaid(authState.user.id)
                    console.log('‚úÖ PaymentCallback: –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ë–î (fallback):', updateResult)
                    if (updateResult) {
                      console.log('‚úÖ PaymentCallback: –°—Ç–∞—Ç—É—Å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω –≤ –ë–î (fallback)')
                    } else {
                      console.error('‚ùå PaymentCallback: –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å –≤ –ë–î (fallback)')
                    }
                  } catch (error) {
                    console.error('‚ùå PaymentCallback: –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –≤ –ë–î (fallback):', error)
                  }
                } else {
                  console.error('‚ùå PaymentCallback: –ù–µ—Ç authState.user.id –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ë–î (fallback)')
                }
                
                setStatus('success')
                setMessage('–û–ø–ª–∞—Ç–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!')
                
                setTimeout(() => {
                  console.log('üîÑ PaymentCallback: –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –≤ –ø—Ä–æ—Ñ–∏–ª—å –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã')
                  navigate('/profile')
                }, 3000)
                return
              } else {
                console.log('‚ö†Ô∏è PaymentCallback: –ü–ª–∞—Ç–µ–∂ –±—ã–ª —Å–æ–∑–¥–∞–Ω –¥–∞–≤–Ω–æ, –≤–æ–∑–º–æ–∂–Ω–æ —ç—Ç–æ —Å—Ç–∞—Ä—ã–π —Ä–µ–¥–∏—Ä–µ–∫—Ç')
              }
            }
            
            console.log('üîÑ PaymentCallback: –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –ª–µ–Ω–¥–∏–Ω–≥ –æ–ø–ª–∞—Ç—ã')
            setStatus('error')
            setMessage('–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ–± –æ–ø–ª–∞—Ç–µ. –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ–ø–ª–∞—Ç—ã...')
            setTimeout(() => {
              navigate('/subscription')
            }, 2000)
          } else {
            console.log('‚ùå PaymentCallback: –ï—Å—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, –Ω–æ –Ω–µ—Ç PaymentId/OrderId')
            setStatus('error')
            setMessage('–û—à–∏–±–∫–∞: –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–ª–∞—Ç–µ–∂–∞')
            setTimeout(() => {
              navigate('/subscription')
            }, 3000)
          }
        }
      } catch (error) {
        console.error('‚ùå PaymentCallback: –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ callback:', error)
        setStatus('error')
        setMessage('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø–ª–∞—Ç–µ–∂–∞')
        
        setTimeout(() => {
          navigate('/subscription')
        }, 3000)
      }
    }

    processPaymentCallback()
  }, [searchParams, navigate, setHasPaid])

  return (
    <div style={{
      minHeight: '100vh',
      display: 'flex',
      alignItems: 'center',
      justifyContent: 'center',
      background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
      padding: '20px'
    }}>
      <div style={{
        background: 'white',
        borderRadius: '20px',
        padding: '40px',
        textAlign: 'center',
        boxShadow: '0 20px 40px rgba(0, 0, 0, 0.1)',
        maxWidth: '400px',
        width: '100%'
      }}>
        {status === 'loading' && (
          <>
            <div style={{
              width: '80px',
              height: '80px',
              background: 'linear-gradient(135deg, #3b82f6, #1d4ed8)',
              borderRadius: '50%',
              display: 'flex',
              alignItems: 'center',
              justifyContent: 'center',
              margin: '0 auto 20px',
              color: 'white'
            }}>
              <Loader size={32} className="animate-spin" />
            </div>
            <h2 style={{ margin: '0 0 10px 0', color: '#1f2937' }}>
              –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–ª–∞—Ç–µ–∂...
            </h2>
            <p style={{ color: '#6b7280', margin: 0 }}>
              –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ
            </p>
          </>
        )}

        {status === 'success' && (
          <>
            <div style={{
              width: '80px',
              height: '80px',
              background: 'linear-gradient(135deg, #10b981, #059669)',
              borderRadius: '50%',
              display: 'flex',
              alignItems: 'center',
              justifyContent: 'center',
              margin: '0 auto 20px',
              color: 'white'
            }}>
              <Check size={32} />
            </div>
            <h2 style={{ margin: '0 0 10px 0', color: '#1f2937' }}>
              –û–ø–ª–∞—Ç–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!
            </h2>
            <p style={{ color: '#6b7280', margin: '0 0 20px 0' }}>
              –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º —Ç–µ—Å—Ç–∞
            </p>
            <p style={{ color: '#9ca3af', fontSize: '14px', margin: 0 }}>
              –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç...
            </p>
          </>
        )}

        {status === 'error' && (
          <>
            <div style={{
              width: '80px',
              height: '80px',
              background: 'linear-gradient(135deg, #ef4444, #dc2626)',
              borderRadius: '50%',
              display: 'flex',
              alignItems: 'center',
              justifyContent: 'center',
              margin: '0 auto 20px',
              color: 'white'
            }}>
              <X size={32} />
            </div>
            <h2 style={{ margin: '0 0 10px 0', color: '#1f2937' }}>
              –û—à–∏–±–∫–∞ –æ–ø–ª–∞—Ç—ã
            </h2>
            <p style={{ color: '#6b7280', margin: '0 0 20px 0' }}>
              {message}
            </p>
            <p style={{ color: '#9ca3af', fontSize: '14px', margin: 0 }}>
              –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –æ–ø–ª–∞—Ç–µ...
            </p>
          </>
        )}
      </div>
    </div>
  )
}

export default PaymentCallback
