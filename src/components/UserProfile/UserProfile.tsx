import React, { useState, useEffect } from 'react'
import { useNavigate, useSearchParams } from 'react-router-dom'
import { useAuth } from '../../contexts/AuthContext'
import { User, Mail, Calendar, LogOut, RotateCcw, FileText } from 'lucide-react'
import { useBPDTestResults, BPDTestResultWithDetails } from '../../shared/hooks/useBPDTestResults'
import BPDTestResultCard from '../BPDTestResultCard/BPDTestResultCard'
import MascotRecommendation from '../MascotRecommendation/MascotRecommendation'
import PaymentModal from '../PaymentModal/PaymentModal'
import { usePaymentContext } from '../../contexts/PaymentContext'

const UserProfile: React.FC = () => {
  const { authState, logout } = useAuth()
  const navigate = useNavigate()
  const [searchParams] = useSearchParams()
  const [isSendingResults, setIsSendingResults] = useState(false)
  const { paymentModalOpen, setPaymentModalOpen, refreshPaymentStatus, hasPaid, forceSetPaid } = usePaymentContext()
  
  const { lastTestResult, isLoading: isLoadingResults, error: testError, sendToSpecialist } = useBPDTestResults(authState.user?.id || null)

  // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–æ—Ñ–∏–ª—è
  useEffect(() => {
    if (authState.user?.id) {
      console.log('UserProfile: –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', authState.user.id)
      console.log('UserProfile: –¢–µ–∫—É—â–∏–π hasPaid:', hasPaid)
      console.log('UserProfile: localStorage hasPaid:', localStorage.getItem('hasPaid'))
      
      // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º localStorage –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º hasPaid –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
      const localHasPaid = localStorage.getItem('hasPaid') === 'true'
      if (localHasPaid && !hasPaid) {
        console.log('UserProfile: –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º hasPaid: true –∏–∑ localStorage')
        forceSetPaid(true)
      }
      
      refreshPaymentStatus()
    }
  }, [authState.user?.id, refreshPaymentStatus, hasPaid, forceSetPaid])

  // –õ–æ–≥–∏—Ä—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è hasPaid
  useEffect(() => {
    console.log('UserProfile: hasPaid –∏–∑–º–µ–Ω–∏–ª—Å—è –Ω–∞:', hasPaid)
  }, [hasPaid])

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –æ–ø–ª–∞—Ç—ã –≤ URL
  useEffect(() => {
    const paymentId = searchParams.get('PaymentId') || searchParams.get('payment_id') || searchParams.get('PaymentID')
    const orderId = searchParams.get('OrderId') || searchParams.get('order_id') || searchParams.get('OrderID')
    const status = searchParams.get('Status') || searchParams.get('status')
    
    console.log('UserProfile: –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –æ–ø–ª–∞—Ç—ã –≤ URL:', {
      paymentId,
      orderId,
      status,
      allParams: Object.fromEntries(searchParams.entries())
    })
    
    // –ï—Å–ª–∏ –µ—Å—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –æ–ø–ª–∞—Ç—ã, –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º hasPaid: true
    if (paymentId || orderId) {
      console.log('UserProfile: –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –æ–ø–ª–∞—Ç—ã, –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º hasPaid: true')
      forceSetPaid(true)
      
      // –û—á–∏—â–∞–µ–º URL –æ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –æ–ø–ª–∞—Ç—ã
      const newUrl = new URL(window.location.href)
      newUrl.search = ''
      window.history.replaceState({}, '', newUrl.toString())
      console.log('UserProfile: URL –æ—á–∏—â–µ–Ω –æ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –æ–ø–ª–∞—Ç—ã')
    }
  }, [searchParams, forceSetPaid])

  useEffect(() => {
    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ localStorage
    const timer = setTimeout(() => {
      if (!authState.user) {
        console.log('UserProfile: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –ø–æ—Å–ª–µ –∑–∞–¥–µ—Ä–∂–∫–∏, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Ç–µ—Å—Ç')
        navigate('/')
      }
    }, 1000) // 1 —Å–µ–∫—É–Ω–¥–∞ –∑–∞–¥–µ—Ä–∂–∫–∏

    return () => clearTimeout(timer)
  }, [authState.user, navigate])

  const handleRetakeTest = () => {
    navigate('/')
  }

  const handleManualSetPaid = () => {
    console.log('üîÑ UserProfile: –†—É—á–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ hasPaid: true')
    forceSetPaid(true)
    console.log('üîÑ UserProfile: hasPaid —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ true, localStorage:', localStorage.getItem('hasPaid'))
  }

  const handleSendToSpecialist = async (testResult: BPDTestResultWithDetails): Promise<boolean> => {
    setIsSendingResults(true)
    try {
      const success = await sendToSpecialist(testResult)
      return success
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:', error)
      return false
    } finally {
      setIsSendingResults(false)
    }
  }

  const handleClosePaymentModal = () => {
    setPaymentModalOpen(false)
  }

  console.log('UserProfile: –†–µ–Ω–¥–µ—Ä–∏–º –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –¥–ª—è', authState.user?.name)

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—â–µ –Ω–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
  if (!authState.user) {
    return (
      <div className="profile-container">
        <div className="profile-card">
          <div className="loading-state">
            <div className="loading-spinner"></div>
            <p>–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Å—Å–∏—é...</p>
          </div>
        </div>
      </div>
    )
  }

  return (
    <div className="profile-container">
      <div className="profile-card">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="profile-header">
          <h1 className="profile-title">
            –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç
          </h1>
          <p className="profile-subtitle">
            –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {authState.user?.name || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}!
          </p>
          
          {/* –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ - –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ hasPaid */}
          <div style={{ marginTop: '10px' }}>
            <button
              onClick={handleManualSetPaid}
              style={{
                padding: '8px 16px',
                background: '#10b981',
                color: 'white',
                border: 'none',
                borderRadius: '6px',
                cursor: 'pointer',
                fontSize: '12px'
              }}
            >
              üîß –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å hasPaid: true
            </button>
            <p style={{ fontSize: '10px', color: '#6b7280', margin: '5px 0 0 0' }}>
              hasPaid: {hasPaid ? 'true' : 'false'} | localStorage: {localStorage.getItem('hasPaid')}
            </p>
          </div>
        </div>

        {/* –ê–≤–∞—Ç–∞—Ä */}
        <div className="profile-avatar-section">
          <div className="profile-avatar">
            {authState.user?.avatar ? (
              <img 
                src={authState.user.avatar} 
                alt="–ê–≤–∞—Ç–∞—Ä" 
                className="avatar-image"
              />
            ) : (
              <User size={32} className="avatar-icon" />
            )}
          </div>
        </div>

        {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ */}
        <div className="profile-info">
          <div className="info-item">
            <User size={18} className="info-icon" />
            <div className="info-content">
              <span className="info-label">–ò–º—è</span>
              <span className="info-value">{authState.user?.name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</span>
            </div>
          </div>
          
          <div className="info-item">
            <Mail size={18} className="info-icon" />
            <div className="info-content">
              <span className="info-label">Email</span>
              <span className="info-value">{authState.user?.email || '–ù–µ —É–∫–∞–∑–∞–Ω'}</span>
            </div>
          </div>
          
          <div className="info-item">
            <Calendar size={18} className="info-icon" />
            <div className="info-content">
              <span className="info-label">–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏</span>
              <span className="info-value">{authState.user?.created_at ? new Date(authState.user.created_at).toLocaleDateString('ru-RU') : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}</span>
            </div>
          </div>
        </div>

        {/* –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∞ */}
        {isLoadingResults ? (
          <div className="no-test-message">
            <h3>–ó–∞–≥—Ä—É–∑–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤...</h3>
            <p>–ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–æ—Å–ª–µ–¥–Ω–µ–º —Ç–µ—Å—Ç–µ</p>
          </div>
        ) : testError ? (
          <div className="no-test-message">
            <h3>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏</h3>
            <p>{testError}</p>
          </div>
        ) : lastTestResult ? (
          <>
            <BPDTestResultCard 
              testResult={lastTestResult}
              onSendToSpecialist={handleSendToSpecialist}
              isSending={isSendingResults}
            />
            <MascotRecommendation testResult={lastTestResult} />
          </>
        ) : (
          <div className="no-test-message">
            <FileText size={48} style={{ margin: '0 auto 16px', color: '#94a3b8' }} />
            <h3>–¢–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã</h3>
            <p>–ü—Ä–æ–π–¥–∏—Ç–µ —Ç–µ—Å—Ç, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∑–¥–µ—Å—å</p>
          </div>
        )}

        {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
        <div className="profile-actions">
          <button
            onClick={handleRetakeTest}
            className="action-button action-button-primary"
          >
            <RotateCcw size={20} />
            –ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç —Å–Ω–æ–≤–∞
          </button>
          
          <button
            onClick={logout}
            className="action-button action-button-secondary"
          >
            <LogOut size={20} />
            –í—ã–π—Ç–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞
          </button>
        </div>
      </div>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –æ–ø–ª–∞—Ç—ã */}
      <PaymentModal
        isOpen={paymentModalOpen}
        onClose={handleClosePaymentModal}
        amount={1}
        description="–î–æ—Å—Ç—É–ø –∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ —Ç–µ—Å—Ç–∞ –ë–ü–î –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–∫–∞—á–∏–≤–∞–Ω–∏—è PDF –æ—Ç—á–µ—Ç–∞"
        userId={authState.user?.id}
        userEmail={authState.user?.email}
      />
    </div>
  )
}

export default UserProfile