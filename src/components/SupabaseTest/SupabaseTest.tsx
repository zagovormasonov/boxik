import React, { useEffect, useState } from 'react'
import { supabase } from '../../lib/supabase'

const SupabaseTest: React.FC = () => {
  const [status, setStatus] = useState<string>('–ü—Ä–æ–≤–µ—Ä–∫–∞...')
  const [error, setError] = useState<string | null>(null)

  useEffect(() => {
    const testSupabase = async () => {
      try {
        console.log('SupabaseTest: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase')
        
        // –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        const { data: connectionTest, error: connectionError } = await supabase
          .from('users')
          .select('count')
          .limit(1)
        
        if (connectionError) {
          throw new Error(`–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: ${connectionError.message}`)
        }
        
        console.log('SupabaseTest: –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ')
        setStatus('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase —Ä–∞–±–æ—Ç–∞–µ—Ç')
        
        // –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã
        const { data: tableTest, error: tableError } = await supabase
          .from('users')
          .select('*')
          .limit(1)
        
        if (tableError) {
          throw new Error(`–û—à–∏–±–∫–∞ —Ç–∞–±–ª–∏—Ü—ã: ${tableError.message}`)
        }
        
        console.log('SupabaseTest: –¢–∞–±–ª–∏—Ü–∞ users –¥–æ—Å—Ç—É–ø–Ω–∞')
        setStatus('‚úÖ –¢–∞–±–ª–∏—Ü–∞ users –¥–æ—Å—Ç—É–ø–Ω–∞')
        
        // –¢–µ—Å—Ç 3: –ü–æ–ø—ã—Ç–∫–∞ –≤—Å—Ç–∞–≤–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–π –∑–∞–ø–∏—Å–∏
        const testUser = {
          id: crypto.randomUUID(), // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π UUID
          email: `test_${Date.now()}@example.com`, // –£–Ω–∏–∫–∞–ª—å–Ω—ã–π email
          name: '–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
          provider: 'test'
        }
        
        const { data: insertTest, error: insertError } = await supabase
          .from('users')
          .insert(testUser)
          .select()
        
        if (insertError) {
          throw new Error(`–û—à–∏–±–∫–∞ –≤—Å—Ç–∞–≤–∫–∏: ${insertError.message}`)
        }
        
        console.log('SupabaseTest: –¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–ø–∏—Å—å —Å–æ–∑–¥–∞–Ω–∞', insertTest)
        setStatus('‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–ø–∏—Å—å —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ')
        
        // –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–ø–∏—Å—å
        await supabase
          .from('users')
          .delete()
          .eq('id', testUser.id)
        
        console.log('SupabaseTest: –¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–ø–∏—Å—å —É–¥–∞–ª–µ–Ω–∞')
        setStatus('‚úÖ Supabase –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–∞–±–æ—Ç–∞–µ—Ç!')
        
      } catch (err) {
        console.error('SupabaseTest: –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è', err)
        setError(err instanceof Error ? err.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')
        setStatus('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è')
      }
    }
    
    testSupabase()
  }, [])

  return (
    <div style={{ 
      padding: '20px', 
      background: 'white', 
      borderRadius: '8px',
      margin: '20px',
      border: '1px solid #e5e7eb'
    }}>
      <h3 style={{ marginBottom: '16px', color: '#1f2937' }}>
        üîß –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase
      </h3>
      
      <div style={{ marginBottom: '16px' }}>
        <strong>–°—Ç–∞—Ç—É—Å:</strong> {status}
      </div>
      
      {error && (
        <div style={{ 
          padding: '12px', 
          background: '#fef2f2', 
          border: '1px solid #fecaca',
          borderRadius: '6px',
          color: '#dc2626'
        }}>
          <strong>–û—à–∏–±–∫–∞:</strong> {error}
        </div>
      )}
      
      <div style={{ 
        marginTop: '16px', 
        padding: '12px', 
        background: '#f8fafc', 
        borderRadius: '6px',
        fontSize: '14px',
        color: '#6b7280'
      }}>
        <strong>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:</strong>
        <br />1. –í—ã–ø–æ–ª–Ω–∏—Ç–µ SQL —Å–∫—Ä–∏–ø—Ç <code>supabase_users_check.sql</code> –≤ Supabase
        <br />2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ —Ç–∞–±–ª–∏—Ü–∞ <code>users</code> —Å–æ–∑–¥–∞–Ω–∞
        <br />3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ RLS –ø–æ–ª–∏—Ç–∏–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ
      </div>
    </div>
  )
}

export default SupabaseTest
