import { createContext, useContext, useState, useEffect, useCallback, ReactNode } from 'react'
import { useUserHasPaid } from '../shared/hooks/useUserHasPaid'
import { useAuth } from './AuthContext'

interface PaymentContextType {
  hasPaid: boolean
  setHasPaid: (paid: boolean) => void
  paymentModalOpen: boolean
  setPaymentModalOpen: (open: boolean) => void
  showPaymentModal: () => void
  hidePaymentModal: () => void
  refreshPaymentStatus: () => Promise<void>
  forceSetPaid: (paid: boolean) => void
  setUserPaid: (userId: string) => Promise<boolean>
}

const PaymentContext = createContext<PaymentContextType | undefined>(undefined)

export function PaymentProvider({ children }: { children: ReactNode }) {
  const [hasPaid, setHasPaid] = useState<boolean>(false) // –í—Å–µ–≥–¥–∞ –Ω–∞—á–∏–Ω–∞–µ–º —Å false, –ø—Ä–æ–≤–µ—Ä—è–µ–º –ë–î
  const [paymentModalOpen, setPaymentModalOpen] = useState(false)
  const [isInitialized, setIsInitialized] = useState(false) // –§–ª–∞–≥ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
  const { getUserHasPaid, setUserPaid } = useUserHasPaid()
  const { authState } = useAuth()

  // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –æ–ø–ª–∞—Ç—ã –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ (—Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑)
  useEffect(() => {
    const initialCheck = async () => {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –∏ –º—ã –µ—â–µ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–ª–∏—Å—å
      if (authState.user?.id && !isInitialized) {
        console.log('PaymentProvider: –ù–∞—á–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –æ–ø–ª–∞—Ç—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', authState.user.id)
        setIsInitialized(true) // –ü–æ–º–µ—á–∞–µ–º –∫–∞–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π
        
        try {
          // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç—ã –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
          const userHasPaid = await getUserHasPaid(authState.user.id)
          console.log('PaymentProvider: –ù–∞—á–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ - —Å—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç—ã –∏–∑ –ë–î:', userHasPaid)
          console.log('PaymentProvider: –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º hasPaid –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ:', userHasPaid)
          setHasPaid(userHasPaid)
          console.log('PaymentProvider: hasPaid —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ:', userHasPaid)
        } catch (error) {
          console.error('PaymentProvider: –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—á–∞–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞ –æ–ø–ª–∞—Ç—ã:', error)
          // –ü—Ä–∏ –æ—à–∏–±–∫–µ –ë–î –æ—Å—Ç–∞–≤–ª—è–µ–º hasPaid = false (–Ω–µ –æ–ø–ª–∞—á–µ–Ω–æ)
          console.log('üîÑ PaymentProvider: –ë–î –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞, –æ—Å—Ç–∞–≤–ª—è–µ–º hasPaid = false')
          setHasPaid(false)
        }
      }
    }
    
    initialCheck()
  }, [authState.user?.id, isInitialized, getUserHasPaid])

  // –£–±—Ä–∞–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ localStorage - –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–ª—å–∫–æ –ë–î

  const showPaymentModal = () => {
    setPaymentModalOpen(true)
  }

  const hidePaymentModal = () => {
    setPaymentModalOpen(false)
  }

  // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –æ–ø–ª–∞—Ç—ã
  const forceSetPaid = useCallback(async (paid: boolean) => {
    console.log('üîÑ PaymentContext: –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º hasPaid:', paid)
    setHasPaid(paid)
    
    // –ï—Å–ª–∏ –µ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º true, –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –ë–î
    if (authState.user?.id && paid) {
      try {
        await setUserPaid(authState.user.id)
        console.log('üîÑ PaymentContext: –°—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç—ã –æ–±–Ω–æ–≤–ª–µ–Ω –≤ –ë–î –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', authState.user.id)
      } catch (error) {
        console.error('‚ùå PaymentContext: –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –≤ –ë–î:', error)
        // –ü—Ä–∏ –æ—à–∏–±–∫–µ –ë–î –≤–æ–∑–≤—Ä–∞—â–∞–µ–º false
        setHasPaid(false)
      }
    }
    
    console.log('üîÑ PaymentContext: hasPaid —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤:', paid)
  }, [authState.user?.id, setUserPaid])

  // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –æ–ø–ª–∞—Ç—ã
  const refreshPaymentStatus = useCallback(async () => {
    if (authState.user?.id) {
      console.log('üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', authState.user.id)
      try {
        // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç—ã –∏–∑ –ë–î
        const userHasPaid = await getUserHasPaid(authState.user.id)
        console.log('üîÑ –°—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç—ã –∏–∑ –ë–î:', userHasPaid)
        setHasPaid(userHasPaid)
      } catch (error) {
        console.error('‚ùå PaymentContext: –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –æ–ø–ª–∞—Ç—ã:', error)
        // –ü—Ä–∏ –æ—à–∏–±–∫–µ –ë–î –æ—Å—Ç–∞–≤–ª—è–µ–º hasPaid = false (–Ω–µ –æ–ø–ª–∞—á–µ–Ω–æ)
        console.log('üîÑ PaymentContext: –ë–î –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞, –æ—Å—Ç–∞–≤–ª—è–µ–º hasPaid = false')
        setHasPaid(false)
      }
    } else {
      console.log('üîÑ refreshPaymentStatus: –ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–π hasPaid:', hasPaid)
    }
  }, [authState.user?.id, getUserHasPaid, hasPaid])

  return (
    <PaymentContext.Provider value={{
      hasPaid,
      setHasPaid,
      paymentModalOpen,
      setPaymentModalOpen,
      showPaymentModal,
      hidePaymentModal,
      refreshPaymentStatus,
      forceSetPaid,
      setUserPaid
    }}>
      {children}
    </PaymentContext.Provider>
  )
}

export function usePaymentContext() {
  const context = useContext(PaymentContext)
  if (!context) {
    throw new Error('usePaymentContext must be used within a PaymentProvider')
  }
  return context
}
